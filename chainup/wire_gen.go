// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package chainup

import (
	"chainup.dev/chainup/infrastructure"
	"chainup.dev/chainup/provision"
	"chainup.dev/chainup/terraform"
)

// Injectors from inject_local.go:

func SetupInMemoryApp() *App {
	provider := ProvideFileConfigProvider()
	config := ProvideConfig(provider)
	terraformConfig := config.Terraform
	terraformTerraform := terraform.ConfigureTerraform(terraformConfig)
	terraformStep := provision.NewTerraformStep(terraformTerraform)
	jobStateMachine := provision.ConfigureJobStateMachine(terraformStep)
	inMemoryJobRepository := provision.NewInMemoryJobRepository()
	provisioner := provision.NewProvisioner(jobStateMachine, inMemoryJobRepository, terraformTerraform)
	inMemoryServerRepository := infrastructure.NewInMemoryServerRepository()
	app := NewApp(config, provisioner, inMemoryServerRepository)
	return app
}

// Injectors from inject_testing.go:

func SetupTestApp() *App {
	provider := ProvideTestConfigProvider()
	config := ProvideConfig(provider)
	terraformConfig := config.Terraform
	terraformTerraform := terraform.ConfigureTerraform(terraformConfig)
	terraformStep := provision.NewTerraformStep(terraformTerraform)
	jobStateMachine := provision.ConfigureJobStateMachine(terraformStep)
	inMemoryJobRepository := provision.NewInMemoryJobRepository()
	provisioner := provision.NewProvisioner(jobStateMachine, inMemoryJobRepository, terraformTerraform)
	inMemoryServerRepository := infrastructure.NewInMemoryServerRepository()
	app := NewApp(config, provisioner, inMemoryServerRepository)
	return app
}
